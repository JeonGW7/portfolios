/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.9
 * Generated at: 2022-03-31 07:13:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.faqboard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class faqprohibition_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("#faq-detail-title{\r\n");
      out.write("  display: block;\r\n");
      out.write("  font-size: 1.3rem;\r\n");
      out.write("  color: #868e96;\r\n");
      out.write("  margin-bottom: 0.4em;\r\n");
      out.write("  font-weight: normal;\r\n");
      out.write("}\r\n");
      out.write("#faq-detail-category{\r\n");
      out.write("  display: block;\r\n");
      out.write("  font-size: 1.3rem;\r\n");
      out.write("  color: #868e96;\r\n");
      out.write("  margin-bottom: 0.4em;\r\n");
      out.write("  font-weight: normal;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<title>faqprohibition.jsp</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("  <h2 id=\"faq-detail-title\">\r\n");
      out.write("    <span id=\"faq-detail-category\">거래 품목</span>\r\n");
      out.write("    판매 금지 물품\r\n");
      out.write("  </h2>\r\n");
      out.write("  \r\n");
      out.write("  <div id=\"faq-detail-content\">\r\n");
      out.write("    <ul>\r\n");
      out.write("    <li>가품∙이미테이션 (상표권, 저작권 침해 물품, 특정 브랜드의 스타일을 모방한 물품)</li>\r\n");
      out.write("    <li>주류(무알콜 주류 포함), 담배, 전자담배, 모의총포 및 그 부속품 일체 (ex. 라이터, 비비탄 총알 등 청소년 유해물건)</li>\r\n");
      out.write("    <li>경유, LPG, 휘발유 등의 유류 거래</li>\r\n");
      out.write("    <li>반려동물, 생명이 있는 동물·곤충 (무료분양, 열대어 포함)</li>\r\n");
      out.write("    <li>한약∙의약품 ∙ 의료기기</a>∙마약류 (청소년 유해약물∙유해화학물질)</li>\r\n");
      out.write("    <li>반영구 화장 등 면허나 자격 없는 자의 불법 유사 의료 행위 홍보/모집글</li>\r\n");
      out.write("    <li>수제 음식물∙건강기능식품 : 직접 만들거나 가공한 음식, 건강기능식품(지자체 및 영업 신고를 한 사람만 판매할 수 있음)</li>\r\n");
      out.write("    <li>유통기한이 지난 제품, 포장이 훼손되거나 개봉된 식품 </li>\r\n");
      out.write("    <li>도수 있는 안경∙선글라스 (온라인 판매 불법)</li>\r\n");
      out.write("    <li>콘택트 렌즈, 써클 렌즈 (온라인 판매 불법)</li>\r\n");
      out.write("    <li>반복/다량 판매하는 핸드메이드 제품</li>\r\n");
      out.write("    <li>화장품 샘플 (온라인 판매 불법)</li>\r\n");
      out.write("    <li>음란물 (청소년 유해 매체물)</li>\r\n");
      out.write("    <li>촬영 여부를 상대방이 알기 어려운 카메라 혹은 그밖에 유사한 기능을 갖춘 기계장치(불법 카메라 등)</li>\r\n");
      out.write("    <li>성생활용품</li>\r\n");
      out.write("    <li>개인정보 (게임 계정, 추천인 계정 포함)</li>\r\n");
      out.write("    <li>조건부 무료나눔</li>\r\n");
      out.write("    <li>렌탈 제품</li>\r\n");
      out.write("    <li>헌혈증 (무료나눔만 가능)</li>\r\n");
      out.write("    <li>초대권 (무료로 받은 초대권을 유료로 판매하는 경우 / 무료나눔만 가능)</li>\r\n");
      out.write("    <li>군용품∙군마트용품∙경찰용품∙도검∙화약류∙분사기∙전자충격기∙석궁∙활 (<strong>안전확인</strong>∙<strong>안전인증표시 </strong>없는 전기용품 및 단전지 또는 공산품)</li>\r\n");
      out.write("    <li>USD 1000달러 이상의 외환 거래나 매매차익을 목적으로 하는 반복적인 외환 거래 (매매차익을 목적으로 하지 않는 1000달러 미만의 외환 거래는 허용)&nbsp;</li>\r\n");
      out.write("    <li>나라미, 정부 지원 생필품, 지역상품권, 문화누리카드 등 법률에 의해 재판매 할 수 없는 물품</li>\r\n");
      out.write("    <li>종량제봉투</li>\r\n");
      out.write("    <li>통신사 데이터, 인터넷 상품</li>\r\n");
      out.write("    <li>반입한 날로부터 1년 이상 경과하지 않은 전파인증이 면제된 해외직구 전자제품을 판매하는 행위</li>\r\n");
      out.write("    <li>낚시로 포획한 수산물 거래 행위</li>\r\n");
      out.write("    <li>암표매매 행위</li>\r\n");
      out.write("    </ul>\r\n");
      out.write("</p>\r\n");
      out.write("  </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
