/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.9
 * Generated at: 2022-03-07 07:45:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import shopdb.*;
import java.util.*;

public final class productInsertPro_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

request.setCharacterEncoding("UTF-8");
ProductDAO productDAO=ProductDAO.getDao(); //dao객체 얻기

      out.write('\r');
      out.write('\n');
      shopdb.OrderDAO orderDAO = null;
      orderDAO = (shopdb.OrderDAO) _jspx_page_context.getAttribute("orderDAO", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (orderDAO == null){
        orderDAO = new shopdb.OrderDAO();
        _jspx_page_context.setAttribute("orderDAO", orderDAO, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');

String flag=request.getParameter("flag"); //insert,update,delete 
boolean result=false;
int iti=0; //변수
if(flag.equals("insert")){ //상품 등록
	result=productDAO.insertProduct(request); //dao메서드 호출
	response.sendRedirect("productList.jsp"); //상품 목록 보기
}else if(flag.equals("update")){ //상품 수정
	result=productDAO.updateProduct(request); //dao메서드 호출
	response.sendRedirect("productList.jsp"); //상품 목록 보기
}else if(flag.equals("delete")){ //상품 삭제
	Vector vec=orderDAO.getOrderList();
	if(vec.size()==0){ //주문 목록에 없으면 삭제
		int im_pro_no=Integer.parseInt(request.getParameter("pro_no"));
		result=productDAO.deleteProduct(request, im_pro_no);
		response.sendRedirect("productList.jsp");
	}else{ //주문 목록에 있을 때
		for(int i=0;i<vec.size();i++){
			OrderDTO orderDTO=(OrderDTO)vec.get(i);
			int pro_no=orderDTO.getPro_no();
			if(pro_no==Integer.parseInt(request.getParameter("pro_no"))){
				iti++;
			}//if-end
		}//for-end
		if(iti==0){ //주문상황이 아니면, 삭제
			int im_pro_no=Integer.parseInt(request.getParameter("pro_no"));
			result=productDAO.deleteProduct(request, im_pro_no); //dao메서드 호출
		}else{ //주문상황이면
			result=false;
		
      out.write("\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\t  alert(\"주문 상태라서 삭제 못함\");\r\n");
      out.write("\t\t  location.href=\"productList.jsp\";\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t\t");

		}//else-end //주문상황이면
	}//else-end //주문 목록에 있을때
}else{ //위의 조건에 맞지 않는 경우
	response.sendRedirect("productList.jsp");
}

      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
