/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.9
 * Generated at: 2022-03-07 02:40:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.shop;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import shopdb.*;

public final class orderList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/shop/top.jsp", Long.valueOf(1646358289390L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      shopdb.OrderDAO orderDAO = null;
      orderDAO = (shopdb.OrderDAO) _jspx_page_context.getAttribute("orderDAO", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (orderDAO == null){
        orderDAO = new shopdb.OrderDAO();
        _jspx_page_context.setAttribute("orderDAO", orderDAO, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');

ProductDAO productDAO=ProductDAO.getDao(); //dao객체얻기

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");

String memId=(String)session.getAttribute("memId");
String log="";
String mem="";
if(memId==null){
	log="<a href='loginForm.jsp'>로그인</a>";
	mem="<a href='inputForm.jsp'>회원가입</a>";
}else{ //로그인 상태이면
	log="<a href='logOut.jsp'>로그아웃</a>";
	mem="<a href='updateMember.jsp'>내정보수정</a>";
}

      out.write("\r\n");
      out.write("<table width=\"80%\" align=\"center\" bgcolor=\"#ffff99\">\r\n");
      out.write("  <tr bgcolor=\"#ffcc00\">\r\n");
      out.write("    <td align=\"center\"><b>");
      out.print(log);
      out.write("</b></td>\r\n");
      out.write("    <td align=\"center\"><b>");
      out.print(mem);
      out.write("</b></td>\r\n");
      out.write("    <td align=\"center\"><b><a href=\"productList.jsp\">상품목록</a></b></td>\r\n");
      out.write("    <td align=\"center\"><b><a href=\"cartList.jsp\">장바구니</a></b></td>\r\n");
      out.write("    <td align=\"center\"><b><a href=\"orderList.jsp\">구매목록</a></b></td>\r\n");
      out.write("  </tr>\r\n");
      out.write("</table>");
      out.write('\r');
      out.write('\n');

if(session.getAttribute("memId")==null){ //로그인상태가 아니면
	response.sendRedirect("loginForm.jsp");
}else{ //로그인 상태이면
	memId=(String)session.getAttribute("memId");
}//else-end

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("  <title>orderList.jsp</title>\r\n");
      out.write("  <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("  <script src=\"//code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("  <script type=\"text/javascript\" src=\"script.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body bgcolor=\"#996600\" topmargin=\"20\">\r\n");
      out.write("  <table width=\"80%\" bgcolor=\"#ffff99\">\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td colspan=\"5\" align=\"center\">\r\n");
      out.write("        <font size=\"5\"><b>");
      out.print(memId);
      out.write("님의 구매목록</b></font>\r\n");
      out.write("      </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td align=\"center\" bgcolor=\"#ffffcc\">\r\n");
      out.write("        <table width=\"95%\" bgcolor=\"#ffff99\">\r\n");
      out.write("          <tr bgcolor=\"#996600\">\r\n");
      out.write("            <td>주문번호</td>\r\n");
      out.write("            <td>제품</td>\r\n");
      out.write("            <td>주문수량</td>\r\n");
      out.write("            <td>주문날짜</td>\r\n");
      out.write("            <td>주문상태</td>\r\n");
      out.write("          </tr>\r\n");
      out.write("          ");

          Vector vec=orderDAO.getOrder(memId); //1명이 주문한 목록 가져오기
          if(vec.size()==0){ //구매목록이 없으면
        	  out.println("구매록록이 없습니다");
          }else{ //구매목록이 있으면
        	  for(int i=0;i<vec.size();i++){
        		  OrderDTO orderDTO=(OrderDTO)vec.get(i);
        		  int pro_no=orderDTO.getPro_no(); //상품 일련 번호
        		  ProductDTO productDTO=productDAO.getProduct(pro_no);
        		  
      out.write("\r\n");
      out.write("        \t\t  <tr>\r\n");
      out.write("        \t\t    <td>");
      out.print(orderDTO.getOrdno());
      out.write("</td>\r\n");
      out.write("        \t\t    ");
      out.write("\r\n");
      out.write("            \t\t<td>\r\n");
      out.write("            \t\t  <a href=\"javaScript:productDetail('");
      out.print(productDTO.getCode());
      out.write("')\">\r\n");
      out.write("            \t\t    ");
      out.print(productDTO.getName() );
      out.write("\r\n");
      out.write("            \t\t  </a>\r\n");
      out.write("            \t\t</td>\r\n");
      out.write("           \t\t\t<td>");
      out.print(orderDTO.getQuantity());
      out.write("</td>\r\n");
      out.write("           \t\t\t<td>");
      out.print(orderDTO.getOrddate());
      out.write("</td>\r\n");
      out.write("           \t\t\t");
      out.write("\r\n");
      out.write("           \t\t\t<td>\r\n");
      out.write("           \t\t\t");

           			switch(Integer.parseInt(orderDTO.getState())){
           			case 1:
           				out.println("접수중");
           				break;
           			case 2:
           				out.println("접수");
           				break;
           			case 3:
           				out.println("입금확인");
           				break;
           			case 4:
           				out.println("배송준비");
           				break;
           			case 5:
           				out.println("배송중");
           				break;
           			default:
           				out.println("배송완료");
           			}//switch-end
           			
      out.write("\r\n");
      out.write("           \t\t\t</td>\r\n");
      out.write("        \t\t  </tr>\r\n");
      out.write("        \t\t  ");

        	  }//for-end
          }//else-end
          
      out.write("\r\n");
      out.write("        </table>\r\n");
      out.write("      </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("  </table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
